name: Code Coverage

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  coverage:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14-alpine
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          ports: 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image and run containers
        run: |
          docker compose up --build -d

      - name: Wait for PostgreSQL to be ready
        run: |
          TIMEOUT=60
          INTERVAL=2
          ELAPSED=0

          while [ $ELAPSED -lt $TIMEOUT ]; do
            if docker compose exec db pg_isready; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
          done

          if [ $ELAPSED -ge $TIMEOUT ]; then
            echo "PostgreSQL did not become ready within the timeout period."
            exit 1
          fi

      - name: Build coverage file
        run: |
          docker compose run app pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt

      - name: Copy Coverage Report
        run: |
          docker compose cp app:/code/pytest.xml ./pytest.xml
          docker compose cp app:/code/pytest-coverage.txt ./pytest-coverage.txt

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml